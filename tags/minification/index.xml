<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kevin Sookocheff</title>
    <link>http://sookocheff.com/tags/minification/</link>
    <language>en-us</language>
    <copyright>Copyright Kevin Sookocheff.</copyright>
    <lastBuildDate>Tue, 10 May 2011 15:11:09 UTC</lastBuildDate>
    
    <item>
      <title>An Argument Against JavaScript Minification</title>
      <link>http://sookocheff.com/posts/2011-05-10-an-argument-against-javascript-minification/</link>
      <pubDate>Tue, 10 May 2011 15:11:09 UTC</pubDate>
      <author>kevin.sookocheff@gmail.com (Kevin Sookocheff)</author>
      <guid>http://sookocheff.com/posts/2011-05-10-an-argument-against-javascript-minification/</guid>
      <description>&lt;p&gt;Developers learn by example. This is no secret. The first advice given to new developers is to read a lot of good source code and the best advice given to experienced developers is to read a lot of good source code. Canonical texts for many languages let the source code say far more than the text. I’m thinking of text’s like &lt;a href=&#34;http://cm.bell-labs.com/cm/cs/cbook/&#34;&gt;Kernighan &amp;amp; Ritchie&lt;/a&gt; and &lt;a href=&#34;http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&amp;amp;tid=4825&#34;&gt;Friedman &amp;amp; Felleisen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When the world wide web was in its infancy view source was the best tool for wannabe webmasters learning their craft. Sure, bad designs and bad decisions propagated quickly. But good designs and good decisions propagated too. Those who really wanted to learn found best of breed web sites and quickly copied, edited and pasted their way to a beautiful site, learning much about web design in the process.&lt;/p&gt;

&lt;p&gt;I would argue that JavaScript is still in its infancy. Developers are building complex web applications and in the process distilling years of hacking experience in to solid design. And we are hiding all this knowledge from the public for performance gains. The irony is that the JavaScript developers writing the best code are the JavaScript developers that minify. In effect we are hiding the best public source of information on JavaScript web development behind nebulous performance gains.&lt;/p&gt;

&lt;p&gt;Is it worth it? Google serves billions of pages a day. Do you?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
