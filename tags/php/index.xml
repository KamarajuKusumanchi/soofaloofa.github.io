<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kevin Sookocheff</title>
    <link>http://sookocheff.com/tags/php/</link>
    <language>en-us</language>
    <copyright>Copyright Kevin Sookocheff.</copyright>
    <lastBuildDate>Wed, 27 Jul 2011 10:08:42 UTC</lastBuildDate>
    
    <item>
      <title>Saving canvas data to an image file with JavaScript and PHP</title>
      <link>http://sookocheff.com/post/javascript/saving-canvas-data-to-an-image-file-with-javascript-and-php/</link>
      <pubDate>Wed, 27 Jul 2011 10:08:42 UTC</pubDate>
      <author>kevin.sookocheff@gmail.com (Kevin Sookocheff)</author>
      <guid>http://sookocheff.com/post/javascript/saving-canvas-data-to-an-image-file-with-javascript-and-php/</guid>
      <description>

&lt;p&gt;Saving HTML canvas element data to an image in a user friendly manner is a tricky problem. Let&amp;rsquo;s look at one way to solve it.&lt;/p&gt;

&lt;h2 id=&#34;first-attempt:5a9203b578a1362ef35307e2e8448241&#34;&gt;First Attempt&lt;/h2&gt;

&lt;p&gt;We could always open our canvas in a new browser tab (or window) with the &lt;code&gt;toDataURL&lt;/code&gt; JavaScript method.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;window.location.href = canvas.toDataURL(&amp;quot;image/png&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unfortunately this requires the user to use the file menu or the right-click button to save the image from the newly opened browser tab. I wouldn’t call this user friendly.&lt;/p&gt;

&lt;h2 id=&#34;second-attempt:5a9203b578a1362ef35307e2e8448241&#34;&gt;Second Attempt&lt;/h2&gt;

&lt;p&gt;After some investigation I came across Nihilogic’s &lt;a href=&#34;http://www.nihilogic.dk/labs/canvas2image/&#34;&gt;&lt;code&gt;Canvas2Image&lt;/code&gt;&lt;/a&gt; JavaScript package. This package presents a Dialog Box to the user allowing them to save the image. This would solve my problem except the downloaded filename has the format 8iqALWM5.part . If my mom encountered a filename like that she wouldn’t know what to do with it. Still not user friendly.&lt;/p&gt;

&lt;h2 id=&#34;final-attempt:5a9203b578a1362ef35307e2e8448241&#34;&gt;Final Attempt&lt;/h2&gt;

&lt;p&gt;What to do? Enter PHP.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.permadi.com/blog/2010/10/html5-saving-canvas-image-data-using-php-and-ajax/&#34;&gt;Permadi&lt;/a&gt; presents a technique using PHP and AJAX that is exactly what I need. After some tweaking here’s what I came up with.&lt;/p&gt;

&lt;h2 id=&#34;save-php:5a9203b578a1362ef35307e2e8448241&#34;&gt;save.php&lt;/h2&gt;

&lt;p&gt;The first PHP file saves the passed in canvas data to the server at a random location determined by the md5(uniqid())  method.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$data = $_POST[&#39;data&#39;];
$file = md5(uniqid()) . &#39;.png&#39;;

// remove &amp;quot;data:image/png;base64,&amp;quot;
$uri =  substr($data,strpos($data,&amp;quot;,&amp;quot;) 1);

// save to file
file_put_contents($file, base64_decode($uri));

// return the filename
echo json_encode($file);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We would call this via JQuery with the $.post method, filling the data parameter using the &lt;code&gt;toDataURL&lt;/code&gt; method.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$.post(&amp;quot;save.php&amp;quot;, {data: canvas.toDataURL(&amp;quot;image/png&amp;quot;)})
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;download-php:5a9203b578a1362ef35307e2e8448241&#34;&gt;download.php&lt;/h2&gt;

&lt;p&gt;Now we can use PHP to force the download of the saved image data. You can read more about this in the &lt;a href=&#34;http://php.net/manual/en/function.readfile.php&#34;&gt;PHP Manual&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$file = trim($_GET[&#39;path&#39;]);

// force user to download the image
if (file_exists($file)) {
    header(&#39;Content-Description: File Transfer&#39;);
    header(&#39;Content-Type: image/png&#39;);
    header(&#39;Content-Disposition: attachment; filename=&#39;.basename($file));
    header(&#39;Content-Transfer-Encoding: binary&#39;);
    header(&#39;Expires: 0&#39;);
    header(&#39;Cache-Control: must-revalidate, post-check=0, pre-check=0&#39;);
    header(&#39;Pragma: public&#39;);
    header(&#39;Content-Length: &#39; . filesize($file));
    ob_clean();
    flush();
    readfile($file);
    exit;
}
else {
    echo &amp;quot;$file not found&amp;quot;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can use the return value of our first AJAX request as input to &lt;code&gt;download.php&lt;/code&gt; to provide the filename.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&amp;quot;#save&amp;quot;).click(function () {
    $.post(&amp;quot;save.php&amp;quot;, {data: G_cv.toDataURL(&amp;quot;image/png&amp;quot;)}, function (file) {
        window.location.href =  &amp;quot;download.php?path=&amp;quot;  file});
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now when the &lt;code&gt;Save&lt;/code&gt; link is clicked a dialog box will be presented to the user asking them to save their image.&lt;/p&gt;

&lt;p&gt;User friendly?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
