<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Kevin Sookocheff]]></title>
        <description><![CDATA[Tinker. Tailor. Soldier. Sailor.]]></description>
        <link>http://sookocheff.com</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Fri, 10 Jan 2014 16:10:31 GMT</lastBuildDate>
        <atom:link href="http://sookocheff.com/rss.xml" rel="self" type="application/rss+xml"/>
        <author><![CDATA[Kevin Sookocheff]]></author>
        <pubDate>Fri, 10 Jan 2014 16:10:00 GMT</pubDate>
        <item>
            <title><![CDATA[New Year, New Domain, New Design]]></title>
            <description><![CDATA[<p>Well the New Year is upon us and I decided to take a fresh approach to this website. I&#39;ve migrated to a new domain and re-written the site from the ground up using <a href="http://docpad.org/">DocPad</a> and <a href="http://getbootstrap.com/">Bootstrap</a>.</p>
<p>I&#39;ve migrated the existing comments (and maybe lost a few) but haven&#39;t bothered to redirect any old posts to their new home. I&#39;m definitely starting fresh!</p>
]]></description>
            <link>http://sookocheff.com/posts/2014-01-06-new-year-new-domain-new-design</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2014-01-06-new-year-new-domain-new-design            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Mon, 06 Jan 2014 06:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Three questions that define an ideal customer]]></title>
            <description><![CDATA[<p>One of the first steps in selling a new product or service is finding your target market and one of the best ways of finding your target market is by defining your ideal customer. Ask yourself -- out of all the people in the world who would be the most likely to buy this thing? If you can clearly answer this question you have your ideal customer and you can start a marketing campaign targetting exactly the demographic you are trying to sell to.</p>
<p>Let&#39;s go through an exercise that can help to find that ideal customer by asking three simple questions.</p>
<h3 id="1-what-are-you-selling-">1. What are you selling?</h3>
<p>You need to clearly define what you are selling. This should get very specific and include any different versions or service levels of your product? Are you selling support? Are yo selling security? Think of the pain points of your customer and how what you are selling can alleviate this pain.</p>
<h3 id="2-who-are-you-selling-to-">2. Who are you  selling to?</h3>
<p>Are you selling to consumers or enterprise? Be specific. Is your offering for teachers or principals? Administrators? Try to define the most specific audience you can and then focus your marketing and sales efforts on exactly this audience.</p>
<h3 id="3-what-is-the-price-point-">3. What is the price point?</h3>
<p>The ideal answer to this question should come from your ideal customer. Find and reach out to the person or people you have identified in your first two questions and ask them -- What would you pay for a service like this? If you are marketing online try and include a survey and gather as much data as you can about possible price points.</p>
<h3 id="remember-your-goal">Remember your goal</h3>
<p>Throughout this exercise always remember to focus on your goal. The biggest marketing questions you need to ask are &quot;Who would buy this?&quot; followed by &quot;How do I find them?&quot;. If you can answer these two questions with marketing your sales channel and product will help close the deal.</p>
]]></description>
            <link>http://sookocheff.com/posts/2014-01-04-three-questions-that-define-an-ideal-customer</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2014-01-04-three-questions-that-define-an-ideal-customer            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Sat, 04 Jan 2014 06:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How to get accepted to a business plan competition]]></title>
            <description><![CDATA[<p>I recently received the good news that my business idea was accepted for the <a href="http://www.usask.ca/research/ilo/business_plan.php">University of Saskatchewan&#39;s 2014 Tech Venture Challenge</a>. The Tech Venture Challenge is a business plan competition for students and alumni where participants are judged by their finished business plan and pitch after a four month workshop program. I&#39;m going to blog about the experience as a way to absorb the material and hopefully help someone else who may be applying in the future. This post will provide some admittedly biased advice on submitting your application to the Tech Venture Challenge. </p>
<h3 id="be-concise">Be concise</h3>
<p>The first criteria for the applications was describing your business idea in 100 words or less. 100 words is not a lot so you need to make sure every word counts. This ideal holds true for all writing (&quot;<a href="https://www.goodreads.com/quotes/952396-not-a-wasted-word-this-has-been-a-main-point">Not a wasted word</a>&quot;). Every word must have purpose and every sentence must lead to your goal -- helping the reader understand exactly what it is you are trying to do. </p>
<h3 id="be-specific">Be specific</h3>
<p>For the technical portion of your application be sure to include concrete and actionable items that can help you achieve your goal. It&#39;s okay here to talk about more specific domain knowledge and use technical terms. You need to show that you have thought deeply about the problem and about how you can best solve it.</p>
<h3 id="be-realistic">Be realistic</h3>
<p>This advice may not apply to all applications and it would vary depending on your idea. In my case I chose a business idea that had a reasonable chance of making forward progress in the next year. At the very least you must provide some evidence that you are at the stage of your business where you are ready to start formalizing your plans and start working towards your goals.</p>
<h3 id="have-someone-proofread-your-work">Have someone proofread your work</h3>
<p>You absolutely <em>need</em> someone outside your immediate circle to proofread your work. Ideally this person would not know anything about your business or even about your problem domain. You must assume that the judges have never heard of your problem and know nothing about your area of expertise. This means you must educate them about what the problem is and how you are going to solve it using plain English. I was lucky enough to have my wife Manon, who has outstanding talent in grant and proposal writing, go over the application with a fine toothed comb. I cannot stress enough how much this helped me convey my idea in an understandable way.</p>
<p>We&#39;ve already had our first workshop session and I&#39;ve learned a ton already. If you want to keep up to date with the competition <a href="http://kevinsookocheff.us3.list-manage2.com/subscribe?u=8b57d632b8677f07ca57dc9cb&amp;id=ec7ddaa3ba">subscribe to this blog</a>. You&#39;ll get new posts delivered right to your inbox!</p>
]]></description>
            <link>http://sookocheff.com/posts/2013-12-19-how-to-get-accepted-to-a-business-plan-competition</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-12-19-how-to-get-accepted-to-a-business-plan-competition            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Thu, 19 Dec 2013 06:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Install node.js packages via npm with a Chef Cookbook]]></title>
            <description><![CDATA[<p>I wanted to set up a Vagrant instance with node.js and some specific packages pre-installed. I found a Chef cookbook to install node and after a bit of work have a cookbook that will install arbitrary node packages through npm.  I based this heavily on <a href="https://github.com/balbeko/chef-npm">balbeko</a>&#39;s chef-npm cookbook with modifications to accept a data bag list of npm packages. Any packages in this list will be installed by Chef.</p>
<p>Behold! My first <a href="https://github.com/soofaloofa/chef-npm-package-install">Chef cookbook</a>.</p>
]]></description>
            <link>http://sookocheff.com/posts/2013-06-04-install-npm-packages-with-a-chef-cookbook</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-06-04-install-npm-packages-with-a-chef-cookbook            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Thu, 06 Jun 2013 06:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Photos is the Killer Feature of Google+]]></title>
            <description><![CDATA[<p>Yesterday&#39;s <a href="http://www.youtube.com/watch?feature=player_embedded&amp;v=9pmPa_KxsAM">Google I/O keynote</a> unveiled some new features in Music, Maps and Search. But to me the biggest and most important announcement was the new <a href="http://thenextweb.com/google/2013/05/15/googles-new-google-photo-features-15gb-full-size-storage-auto-highlight-auto-enhance-more/">Google+ photo features</a>. Full-size high-resolution photos, automatic highlights of entire albums, automatic enhancement and auto-awesome combine to make Google+ <em>the</em> most feature packed photo hosting service on the web. Add the ability to share pictures with anyone via e-mail (take that Facebook) and Google+ is now <em>the</em> best social network to host and share photos. </p>
<p>Why is this important? It encroaches directly on Facebook&#39;s bread and butter, sharing pictures. Take a look at the <a href="http://expandedramblings.com/index.php/by-the-numbers-17-amazing-facebook-stats/">statistics</a>. As of May 2013 Facebook hosts 240 billion photos and averages roughly 350 million photo uploads per day. This implies (and my limited anecdotal evidence supports) that most Facebook users view the site as a photo sharing service. If Google can gain mindshare as the premiere social network for sharing photos you may see a large defection users from Facebook. </p>
]]></description>
            <link>http://sookocheff.com/posts/2013-05-16-why-photos-is-the-killer-feature-of-google-plus</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-05-16-why-photos-is-the-killer-feature-of-google-plus            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Thu, 16 May 2013 06:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Apple has a Software Problem - Why I'll be Switching to Android]]></title>
            <description><![CDATA[<p>No one can question Apple’s dominance in hardware. The build quality and user experience of the iPod, iPhone and iPad positioned Apple as the most profitable company in the world. However, with the build quality of rival devices quickly approaching Apple quality, software will be the next battleground for consumer loyalty. And Apple has a software problem.</p>
<p>The release of <a href="http://googleblog.blogspot.ca/2013/04/google-now-on-your-iphone-and-ipad-with.html">Google Now</a> for iOS has shown that Google’s software engineering and user interface design can combine to release high quality, functional products surpassing those custom-built by Apple on Apple’s own hardware. Cloud-based mobile apps will continue to gain users and Google’s cloud based offerings are on a completely different level than Apples meagre offerings. In my personal experience Apple’s Reminders App constantly goes out of sync between my iPad and iPhone — with only a simple to-do list on two devices! As more and more data is pushed to the cloud Google’s offerings will continue to outpace what Apple’s — Google has solved so many distributed and cloud computing problems and their infrastructure is not easily replicated.</p>
<p>I have completely replaced Safari with Google Search and Google Chrome, Mail with Gmail, Siri with Google Voice Search, and Google Now is a complete product offering with no answer from Apple. These services work even better with deeper integration and for my next phone I’ll be switching over to Android to gain this integration. As Google Plus and the Google identity layer gain more penetration, more and more people will be using Google products. Imagine a new user with a Google account and a few Google services buying a phone. You can buy Android, sign in once and all your data is exactly where you expect. Or you can buy Apple, download 3 apps, configure the rest to work properly with your existing calendar and hope that everything stays in sync. I know what I do.</p>
]]></description>
            <link>http://sookocheff.com/posts/2013-04-30-apple-has-a-software-problem-why-ill-be-switching-to-android</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-04-30-apple-has-a-software-problem-why-ill-be-switching-to-android            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Tue, 30 Apr 2013 06:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Creating a new file or directory in Vim using NERDTree]]></title>
            <description><![CDATA[<p>I’m not sure why this was so difficult to discover. For the longest time I was not sure how to create a new file using NERDTree. I finally sat down and figure out how it works.</p>
<p>First, bring up NERDTree and navigate to the directory where you want to create the new file. Press <code>m</code> to bring up the NERDTree Filesystem Menu. This menu allows you to create, rename, and delete files and directories. Type <code>a</code> to add a child node and then simply enter the filename. You’re done! To create a directory follow the same steps but append a <code>/</code> to the filename.</p>
]]></description>
            <link>http://sookocheff.com/posts/2013-04-19-creating-a-new-file-or-directoryin-vim-using-nerdtree</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-04-19-creating-a-new-file-or-directoryin-vim-using-nerdtree            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Fri, 19 Apr 2013 06:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Submitting a Unity3d Game to the Mac App Store]]></title>
            <description><![CDATA[<p>Submitting a Unity3d game to the Mac App Store is a somewhat painful process. This guide refers to Unity3d 3.5 but should apply to Unity 4.0 and up.</p>
<h3 id="building">Building</h3>
<p>First, build your application for Mac and make sure that you uncheck Mac App Store Validation in the PlayerSettings Inspector window.</p>
<p><img src="/img/2013-04-09-submitting-a-unity3d-game-to-the-mac-app-store/player-settings.png" alt="PlayerSettings" title="PlayerSettings"></p>
<p>Building your App from Unity will create a .App file. Navigate to this file in Finder and right-click. Choose Show Package Contents from the context menu to open your app as a folder.</p>
<h3 id="info-plist">Info.plist</h3>
<p>Navigate to the Contents directory and open the file Info.plist in your favorite text editor. You will need to make a few changes to this file.</p>
<p><img src="/img/2013-04-09-submitting-a-unity3d-game-to-the-mac-app-store/info-plist.png" alt="Info.plist" title="Info.plist"></p>
<p>Specifically, you will need to edit the following entries to correspond to your specific application.</p>
<pre class="highlight"><code class="xml">CFBundleExecutable: The name of your game.
CFBundleGetInfoString: Human readable information about your game.
CFBundleIdentifier: The App identifier you registered at the Mac App Store.
CFBundleName: The name of your game.
CFBundleShortVersionString: The version number of your game.
NSHumanReadableCopyright: Your copyright.
LSApplicationCategoryType: The category of your application.</code></pre>
<p>The end result will look something like this:</p>
<pre class="highlight"><code class="xml"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="doctype">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span>
<span class="tag">&lt;<span class="title">plist</span> <span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</span>
<span class="tag">&lt;<span class="title">dict</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleDevelopmentRegion<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>English<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleExecutable<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>PhantomLeader<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleGetInfoString<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>Phantom Leader version 1.0.7<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleIconFile<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>icons.icns<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleIdentifier<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>com.dvg.phantomleadermac<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleInfoDictionaryVersion<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>6.0<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleName<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>PhantomLeader<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundlePackageType<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>APPL<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleShortVersionString<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>1.0.7<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleSignature<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>????<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>CFBundleVersion<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>1.0.7<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>NSMainNibFile<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>MainMenu<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>NSPrincipalClass<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>PlayerApplication<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>NSHumanReadableCopyright<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>Dan Verssen Games/Red Finch Software<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>LSApplicationCategoryType<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>public.app-category.board-games<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>UnityBuildNumber<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>b81e0151ec83<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
<span class="tag">&lt;/<span class="title">dict</span>&gt;</span>
<span class="tag">&lt;/<span class="title">plist</span>&gt;</span></code></pre>
<p>You can get more information about these keys from the Apple developer documentation. The most notable key in need of changing is the LSApplicationCategoryType which must correspond to an actual category on the Mac App Store. You can find the LS keys documentation <a href="http://developer.apple.com/library/ios/#documentation/general/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html">here</a>.</p>
<h3 id="icons">Icons</h3>
<p>You will need to generate an iconset matching Apple’s <a href="https://developer.apple.com/library/mac/#documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html#//apple_ref/doc/uid/TP40012302-CH7-SW2">Human Interface Guidelines</a>. The first step is to create all of the required icons. You will need variations of your icon supporting the following resolutions.</p>
<pre class="highlight"><code class="avrasm">icon_16x16<span class="preprocessor">.png</span>
icon_16x16<span class="localvars">@2</span><span class="built_in">x</span><span class="preprocessor">.png</span>
icon_32x32<span class="preprocessor">.png</span>
icon_32x32<span class="localvars">@2</span><span class="built_in">x</span><span class="preprocessor">.png</span>
icon_128x128<span class="preprocessor">.png</span>
icon_128x128<span class="localvars">@2</span><span class="built_in">x</span><span class="preprocessor">.png</span>
icon_256x256<span class="preprocessor">.png</span>
icon_256x256<span class="localvars">@2</span><span class="built_in">x</span><span class="preprocessor">.png</span>
icon_512x512<span class="preprocessor">.png</span>
icon_512x512<span class="localvars">@2</span><span class="built_in">x</span><span class="preprocessor">.png</span></code></pre>
<p>Place all of these icons in the same folder called icons.iconset. Now we have to drop in to Terminal and run the iconutil program to create your icns file which will be named the same as your icons folder. Running</p>
<pre class="highlight"><code class="bash">iconutil -c icns</code></pre>
<p>will generate a file called icons.icns. You will need to replace the file <code>UnityPlayer.icns</code> with this icon file using Finder. The <code>UnityPlayer.icns</code> file is located in <code>Contents -&gt; Resources</code> within your .App.</p>
<h3 id="entitlements">Entitlements</h3>
<p>All Apps on the Mac App Store must be sandboxed. To sandbox your Unity app you have to provide an entitlements file to use during the code signing process. A fairly minimal entitlements file should look something like this.</p>
<pre class="highlight"><code class="xml"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="doctype">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span>
<span class="tag">&lt;<span class="title">plist</span> <span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</span>
<span class="tag">&lt;<span class="title">dict</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>com.apple.security.app-sandbox<span class="tag">&lt;/<span class="title">key</span>&gt;</span> <span class="tag">&lt;<span class="title">true</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>com.apple.security.device.usb<span class="tag">&lt;/<span class="title">key</span>&gt;</span> <span class="tag">&lt;<span class="title">true</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">dict</span>&gt;</span>
<span class="tag">&lt;/<span class="title">plist</span>&gt;</span></code></pre>
<p>You can read more about entitlements at the <a href="http://developer.apple.com/library/mac/#documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/AboutEntitlements.html">Entitlement Key Reference</a>.</p>
<h3 id="code-signing">Code Signing</h3>
<p>Now that we have our iconset and entitlements ready we can codesign our App for delivery to the Mac App Store. We have to drop back to the Terminal to run the codesign application.</p>
<pre class="highlight"><code class="bash">codesign --force --sign <span class="string">"3rd Party Mac Developer Application: XXXX"</span> --entitlements yourapp.entitlements YourApp.app</code></pre>
<p>You can find &quot;XXXX&quot; in the Keychain Access program. Look for a code signing certificate beginning with the text &quot;3rd Party Mac Developer Application&quot; you will need to copy this entire text to the codesign command above. You can find more details from the <a href="http://developer.apple.com/library/mac/#releasenotes/General/SubmittingToMacAppStore/index.html">App Store Submission documentation</a>.</p>
<p><img src="/img/2013-04-09-submitting-a-unity3d-game-to-the-mac-app-store/keychain.png" alt="KeyChain Access" title="KeyChain Access"></p>
<p>In addition to signing your app you must sign <code>libmono.dylib</code>.  </p>
<pre class="highlight"><code class="bash">codesign --force --sign <span class="string">"3rd Party Mac Developer Application: XXXX"</span> --entitlements yourapp.entitlements YourApp.app/Contents/Frameworks/MonoEmbedRuntime/osx/libmono.<span class="number">0</span>.dylib</code></pre>
<p>If you don’t have the required Keychain Access certificates you will need to create these using the Apple Member Center.</p>
<h3 id="product-building">Product Building</h3>
<p>To build your final product run productbuild from the command line.</p>
<pre class="highlight"><code class="bash">productbuild --component /YourApp.app /Applications --sign <span class="string">"3rd Party Mac Developer Installer: XXXX"</span> YourApp.pkg</code></pre>
<p>Where &quot;XXXX&quot; is again from Keychain Access. This time, use the certificate beginning with  &quot;3rd Party Mac Developer Installer&quot;.</p>
<h3 id="application-loader">Application Loader</h3>
<p>You are finally ready to submit your App! Before submission you must create your App on iTunes Connect and fill out detailed app information. After your app is created launch Application Loader and click on Deliver Your App. Choose the application you created in iTunes Connect from the drop down menu and follow the prompts to choose your .pkg file that was created with the productbuild  command.</p>
<p>Your done! Click submit and, if all went well, you will see your app will be delivered to the App Store and be ready for review.</p>
]]></description>
            <link>http://sookocheff.com/posts/2013-04-09-submitting-a-unity3d-game-to-the-mac-app-store</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-04-09-submitting-a-unity3d-game-to-the-mac-app-store            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Tue, 09 Apr 2013 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Development Post-Mortem up now on BoardGameGeek.com]]></title>
            <description><![CDATA[<p>I recently published a full development post-mortem at BoardGameGeek.com. Give it a read and let me know what you think!</p>
<p><a href="http://boardgamegeek.com/blogpost/16843/developer-post-mortem-phantom-leader">Developer Post-Mortem: Phantom Leader for iPad</a>.</p>
]]></description>
            <link>http://sookocheff.com/posts/2013-02-12-development-post-mortem-up-now-on-boardgamegeek-com</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-02-12-development-post-mortem-up-now-on-boardgamegeek-com            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Tue, 12 Feb 2013 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Copying from Vim to the OS X Mountain Lion clipboard]]></title>
            <description><![CDATA[<p>The latest version of OS X (Mountain Lion) broke compatibility with the vim and the OS clipboard. In most cases you can configure vim to use the operating system clipboard by setting <code>clipboard=unnamed</code> in your <code>.vimrc</code>. Unfortunately this setting does not work in OS X because the default version of vim was not compiled with clipboard support. You can check if your version of vim is compiled with clipboard support by typing <code>vim –version</code>  and looking for <code>clipboard</code>. A prepended <code>+</code> means support is enabled. A prepended <code>–</code> means support is disabled.</p>
<p>So, how do we get clipboard support? By using Macports to install a new version of vim using the <code>huge</code> flag of <code>port install</code>. I also compiled with support for python, ruby, and cscope.</p>
<pre class="highlight"><code class="bash"><span class="built_in">sudo</span> port install vim huge python ruby cscope</code></pre>
]]></description>
            <link>http://sookocheff.com/posts/2013-01-22-copying-from-the-vim-to-the-os-x-mountain-lion-clipboard</link>
            <guid isPermaLink="true">
                http://sookocheff.com/posts/2013-01-22-copying-from-the-vim-to-the-os-x-mountain-lion-clipboard            </guid>
            <dc:creator><![CDATA[Kevin Sookocheff]]></dc:creator>
            <pubDate>Tue, 22 Jan 2013 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>